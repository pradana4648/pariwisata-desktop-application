/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pariwisata_desktop_app;

import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import pariwisata_desktop_app.pojo.Kabupaten;
import pariwisata_desktop_app.pojo.Provinsi;
import pariwisata_desktop_app.pojo.StoreResult;
import pariwisata_desktop_app.services.FileService;
import pariwisata_desktop_app.services.JSONService;

/**
 *
 * @author danar
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        initComboBox();
        initCheckField();
        
        // Override to accept only numbers
        hargaTiketField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume();  // if it's not a number, ignore the event
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        namaField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        deskripsiTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        hargaTiketField = new javax.swing.JTextField();
        hargaTiketLabel = new javax.swing.JLabel();
        urlGambarField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jenisPariwisataComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        provinsiComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kabupatenComboBox = new javax.swing.JComboBox<>();
        exportJsonButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        filePathField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        simpanButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pariwisata Desktop");
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Nama Pariwisata");

        jLabel2.setText("Deskripsi");

        deskripsiTextArea.setColumns(20);
        deskripsiTextArea.setRows(5);
        jScrollPane1.setViewportView(deskripsiTextArea);

        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane2.setAlignmentY(10.5F);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Deskripsi", "Jenis Pariwisata", "Harga Tiket", "URL Gambar", "Lokasi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAlignmentX(1.0F);
        jTable1.setAlignmentY(1.0F);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(true);
        jScrollPane2.setViewportView(jTable1);

        hargaTiketField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaTiketFieldActionPerformed(evt);
            }
        });

        hargaTiketLabel.setText("Harga Tiket ");

        jLabel4.setText("URL Gambar");

        jLabel5.setText("Jenis Pariwisata");

        jenisPariwisataComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pariwisata Buatan", "Pariwisata Alami" }));

        jLabel6.setText("Lokasi");

        provinsiComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provinsiComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Provinsi");

        jLabel8.setText("Kabupaten / Kota");

        kabupatenComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kabupatenComboBoxActionPerformed(evt);
            }
        });

        exportJsonButton.setText("Export ke JSON");
        exportJsonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportJsonButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Hapus");

        updateButton.setText("Update");

        jLabel3.setText("Simpan File");

        jButton1.setText("Pilih File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hargaTiketLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hargaTiketField)
                            .addComponent(namaField)
                            .addComponent(jScrollPane1)
                            .addComponent(urlGambarField)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jenisPariwisataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(provinsiComboBox, 0, 186, Short.MAX_VALUE)
                                            .addComponent(kabupatenComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(simpanButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(exportJsonButton))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(updateButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(hapusButton)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filePathField)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jenisPariwisataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hargaTiketLabel)
                    .addComponent(hargaTiketField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(urlGambarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(provinsiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(updateButton)
                    .addComponent(hapusButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kabupatenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(exportJsonButton)
                    .addComponent(simpanButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void provinsiComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provinsiComboBoxActionPerformed
        // TODO add your handling code here:        
        if (!kabupatenComboBox.isEnabled()) {
            kabupatenComboBox.setEnabled(true);
        }

        // If current list comboBox3 still exist
        kabupatenComboBox.removeAllItems();

        provinsiComboBox.addItemListener((ItemEvent arg0) -> {
            Provinsi singleProvinsi;
            Set<Provinsi> setProvinsiFilter = JSONService.getListProvinsi().stream().collect(Collectors.toSet());
            singleProvinsi = setProvinsiFilter.stream().filter((Provinsi provinsi) -> provinsi.getNama().equals(arg0.getItem().toString())).collect(Collectors.toList()).get(0);

            JSONService.getAllKabupaten(singleProvinsi.getId());
        });

        // Sorted 
        JSONService.getListKabupaten().sort((Kabupaten arg0, Kabupaten arg1) -> arg0.getNama().compareTo(arg1.getNama()));

        JSONService.getListKabupaten().forEach(kabupaten -> {
            kabupatenComboBox.addItem(kabupaten.getNama());
        });

        kabupatenComboBox.revalidate();
        kabupatenComboBox.repaint();


    }//GEN-LAST:event_provinsiComboBoxActionPerformed

    private void kabupatenComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kabupatenComboBoxActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_kabupatenComboBoxActionPerformed

    private void exportJsonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportJsonButtonActionPerformed
        // TODO add your handling code here:

        FileService.savedDataToFileJSON(filePathField.getText());
    }//GEN-LAST:event_exportJsonButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("JSON File", "json");
        fileChooser.setFileFilter(fileFilter);

        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            filePathField.setText(fileChooser.getSelectedFile().getAbsolutePath());
            initCheckField();
            System.out.println("SAVED JSON FILE");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        final String[] columnNames = {"Nama", "Deskripsi", "Jenis Wisata", "Harga Tiket", "URL Gambar", "Lokasi"};

        final DefaultTableModel dataTableModel = new DefaultTableModel(columnNames, 0);
        try {
            boolean isValid = !namaField.getText().isBlank() && !deskripsiTextArea.getText().isBlank() && !hargaTiketField.getText().isBlank() && !urlGambarField.getText().isBlank();
            if (isValid) {
                String lokasi = provinsiComboBox.getSelectedItem() + ", " + kabupatenComboBox.getSelectedItem();
                StoreResult storeResult = new StoreResult(namaField.getText(), deskripsiTextArea.getText(), (String) jenisPariwisataComboBox.getSelectedItem(), Integer.parseInt(hargaTiketField.getText()), urlGambarField.getText(), lokasi);
                StoreData.getTables().add(new Object[]{storeResult.getNama(), storeResult.getDeskripsi(), storeResult.getJenisWisata(), storeResult.getHargaTiket(), storeResult.getUrlGambar(), storeResult.getLokasi()});

                for (Object[] data : StoreData.getTables()) {
                    dataTableModel.addRow(data);
                }
                FileService.saveDataToList(storeResult);

                jTable1.setModel(dataTableModel);
            } else {
                JOptionPane.showMessageDialog(null, "Seluruh field harus diisi");
            }

            clearField();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "[" + hargaTiketLabel.getText().toUpperCase() + "]" + " TIDAK BOLEH DIISI HURUF", "PERINGATAN", JOptionPane.ERROR_MESSAGE);
        }

        // Set column width
        for (int i = 0; i < columnNames.length; i++) {
            jTable1.getColumnModel().getColumn(i).setMinWidth(100);
        }


    }//GEN-LAST:event_simpanButtonActionPerformed

    private void hargaTiketFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaTiketFieldActionPerformed
        // TODO add your handling code here:
        ((AbstractDocument) hargaTiketField.getDocument()).setDocumentFilter(new DocumentFilter() {
            Pattern regEx = Pattern.compile("\\d*");

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                Matcher matcher = regEx.matcher(text);
                if (!matcher.matches()) {
                    return;
                }
                super.replace(fb, offset, length, text, attrs);
            }
        });
    }//GEN-LAST:event_hargaTiketFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainApp().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea deskripsiTextArea;
    private javax.swing.JButton exportJsonButton;
    private javax.swing.JTextField filePathField;
    private javax.swing.JButton hapusButton;
    private javax.swing.JTextField hargaTiketField;
    private javax.swing.JLabel hargaTiketLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jenisPariwisataComboBox;
    private javax.swing.JComboBox<String> kabupatenComboBox;
    private javax.swing.JTextField namaField;
    private javax.swing.JComboBox<String> provinsiComboBox;
    private javax.swing.JButton simpanButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField urlGambarField;
    // End of variables declaration//GEN-END:variables

    // Call this to clear all field
    private void clearField() {
        namaField.setText(null);
        deskripsiTextArea.setText(null);
        hargaTiketField.setText(null);
        urlGambarField.setText(null);
    }

    private void initComboBox() {
        // Init Provinsi List and kabupatne
        JSONService.getAllProvinsi();
        // Sorted
        JSONService.getListProvinsi().sort((Provinsi arg0, Provinsi arg1) -> arg0.getNama().compareTo(arg1.getNama()));
        JSONService.getListProvinsi().forEach(provinsi -> {
            provinsiComboBox.addItem(provinsi.getNama());
        });

        // Get All
        provinsiComboBox.addItemListener((ItemEvent arg0) -> {
            Provinsi singleProvinsi;
            Set<Provinsi> setProvinsiFilter = JSONService.getListProvinsi().stream().collect(Collectors.toSet());
            singleProvinsi = setProvinsiFilter.stream().filter((Provinsi provinsi) -> provinsi.getNama().equals(arg0.getItem().toString())).collect(Collectors.toList()).get(0);

            JSONService.getAllKabupaten(singleProvinsi.getId());
        });

        // Sorted 
        JSONService.getListKabupaten().sort((Kabupaten arg0, Kabupaten arg1) -> arg0.getNama().compareTo(arg1.getNama()));

        JSONService.getListKabupaten().forEach(kabupaten -> {
            kabupatenComboBox.addItem(kabupaten.getNama());
        });

        kabupatenComboBox.revalidate();
        kabupatenComboBox.repaint();

    }

    private void initCheckField() {
        // If pathfile is exist without white space
        if (!filePathField.getText().isBlank()) {
            namaField.setEnabled(true);
            simpanButton.setEnabled(true);
            deskripsiTextArea.setEnabled(true);
            jenisPariwisataComboBox.setEnabled(true);
            hargaTiketField.setEnabled(true);
            urlGambarField.setEnabled(true);
            provinsiComboBox.setEnabled(true);
            updateButton.setEnabled(true);
            hapusButton.setEnabled(true);
            exportJsonButton.setEnabled(true);
            jTable1.setEnabled(true);
        } else {
            namaField.setEnabled(false);
            simpanButton.setEnabled(false);
            deskripsiTextArea.setEnabled(false);
            jenisPariwisataComboBox.setEnabled(false);
            hargaTiketField.setEnabled(false);
            urlGambarField.setEnabled(false);
            provinsiComboBox.setEnabled(false);
            kabupatenComboBox.setEnabled(false);
            updateButton.setEnabled(false);
            hapusButton.setEnabled(false);
            exportJsonButton.setEnabled(false);
            jTable1.setEnabled(false);
        }
    }
}
